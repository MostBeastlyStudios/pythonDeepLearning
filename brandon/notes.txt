

Saving a Neural Network:
  > In python, you can save specific objects as "Pickles"
  > Do not have to train every time

Linear Regression:
  > Looks at past data and tries to create a best fit line for it. Continues that trend on 2D data. Matches variance and step size.
  > Useful for 2D data
    > XY graph

    Best fit line:
      > Y = mx+b
        > m = (mean(x)*mean(y)-mean(xy))/(mean(x)^2 - mean(x^2))
        > b = mean(y)-m*mean(x)
      > Only works on 2D data

K Nearest Neighbors:
  > Sorting unknown data based on who is the closest in proximity on a graph
  > Looks at all points which can be classified and any unclassifiable data points are classified by the K nearest neighbors.
  > Not great on large data sets because it relies on Euclidean distance calculation
  > No training involved

    Euclidean Distance:
      > sqrt(nEi=1 (ai=Pi)^2)

Support Vector Machine:
  > Best for reading handwritten data
  > Separates data into two groups using a "best separating hyperplane" or "decision line"
  > Can only separate data into two groups at a time for classification
  > Need to know vector math
    > Dot product
  > Needs to be trained
